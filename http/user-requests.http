
###
POST /oauth/token HTTP/1.1
Host: localhost:8040
Content-Type: application/json
Cache-Control: no-cache

{
  "username": "a.wozniak@test.pl"
}

> {%
    client.test("Request token successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        var type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });
    client.global.set("auth_token", response.body.token);
%}

###
POST /users/oauth/token HTTP/1.1
Host: localhost:8180
Content-Type: application/json
Cache-Control: no-cache

{
  "username": "t.wozniak@test.pl"
}

> {%
    client.test("Request token fail", function() {
        client.assert(response.status === 400, "Response status is not 200");
        var type = response.contentType.mimeType;
        var body = response.body;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
        client.assert(
            body.message === "User with email 't.wozniak@test.pl' doesn't exist",
            "Expected User with email 't.wozniak@test.pl' doesn't exist but received '" + body.message + "'"
        );
    });
%}

###

GET /users/api/users/ HTTP/1.1
Host: localhost:8180
Accept: application/json
Authorization: Bearer {{auth_token}}
Content-Type: application/json

> {%
    client.test("Request all users with Bearer token finished successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        var type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });
%}

###
// Without Bearer token
GET /users/api/users/ HTTP/1.1
Host: localhost:8180
Accept: application/json
Content-Type: application/json

> {%
    client.test("Request all users without Bearer token finished with code 401", function() {
        client.assert(response.status === 401, "Response status is not 401");
        var type = response.contentType.mimeType;
        client.assert(type === "text/plain", "Expected 'plain/text' but received '" + type + "'");
    });
%}

###

POST /users/api/users/ HTTP/1.1
Host: localhost:8180
Content-Type: application/json
Accept: application/json

{
  "id": null,
  "firstName": "{{testFirstName}}",
  "lastName": "{{testLastName}}",
  "password": "{{testPass}}",
  "email": "{{testEmail}}"
}

> {%
    client.test("Request create a user finished successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
        var type = response.contentType.mimeType;
        var body = response.body;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
        client.assert(body.firstName === "John", "Expected 'firstName' John but received '" + body.firstName + "'");
        client.assert(body.lastName === "Snow", "Expected 'lastName' Snow but received '" + body.lastName + "'");
        client.assert(body.email === "j.snow@test.pl", "Expected 'email' j.snow@test.pl but received '" + body.email + "'");
    });
%}

###
