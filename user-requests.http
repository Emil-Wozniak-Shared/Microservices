
###
POST /users/oauth/token HTTP/1.1
Host: localhost:8180
Content-Type: application/json
Cache-Control: no-cache

{ "username": "John" }

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.test("Response content-type is json", function() {
        var type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });
    client.global.set("auth_token", response.body.token);
%}

###

GET /users/api/users/ HTTP/1.1
Host: localhost:8180
Accept: application/json
Authorization: Bearer {{auth_token}}
Content-Type: application/json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.test("Response content-type is json", function() {
        var type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });
%}

###

POST /users/api/users/ HTTP/1.1
Host: localhost:8180
Content-Type: application/json
Accept: application/json
#Authorization: Bearer {{auth_token}}

{
  "id": null,
  "firstName": "Sample",
  "lastName": "Test",
  "password": "123456",
  "email": "s.test@test.pl"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
    client.test("Response content-type is json", function() {
        var type = response.contentType.mimeType;
        client.assert(type === "text/plain", "Expected 'text/plain' but received '" + type + "'");
    });
%}

###
